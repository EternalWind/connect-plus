plugins {
	id 'java'
	id 'org.springframework.boot' version '3.1.1'
	id 'io.spring.dependency-management' version '1.1.0'
	id 'com.google.cloud.tools.appengine' version '2.4.4'
}

group = 'io.eternalwind'
version = '0.0.1-SNAPSHOT'

java {
	sourceCompatibility = '17'
}

repositories {
	mavenCentral()
}

appengine {
	stage {
		artifact = bootJar.archiveFile.get().asFile
	}

	deploy {
		projectId = "GCLOUD_CONFIG"
		version = "GCLOUD_CONFIG"
	}
}

jar {
    enabled = false
}

bootJar {
   archiveFileName = "${archiveBaseName.get()}.${archiveExtension.get()}"
}

ext {
	set('springCloudGcpVersion', "4.5.1")
	set('springdocVersion', "2.0.2")
	set('mapstructVersion', "1.5.3.Final")
	set('lombokMapstructBindingVersion', "0.2.0")
}

dependencies {
	compileOnly 'org.projectlombok:lombok'
	testCompileOnly 'org.projectlombok:lombok'
	developmentOnly 'org.springframework.boot:spring-boot-devtools'

	testImplementation 'org.springframework.boot:spring-boot-starter-test'
	testImplementation 'org.springframework.boot:spring-boot-testcontainers'
	testImplementation 'io.projectreactor:reactor-test'
	testImplementation 'org.testcontainers:junit-jupiter'
	testImplementation 'org.testcontainers:testcontainers'
	testImplementation 'org.testcontainers:gcloud'

	implementation 'org.springframework.boot:spring-boot-starter-webflux'
	implementation 'com.google.cloud:spring-cloud-gcp-starter-data-firestore'
	implementation 'org.springdoc:springdoc-openapi-starter-webflux-ui'
	implementation 'org.mapstruct:mapstruct'

	annotationProcessor 'org.mapstruct:mapstruct-processor'
	annotationProcessor 'org.projectlombok:lombok'
	testAnnotationProcessor 'org.projectlombok:lombok'
	annotationProcessor 'org.projectlombok:lombok-mapstruct-binding'
}

dependencyManagement {
	imports {
		mavenBom "com.google.cloud:spring-cloud-gcp-dependencies:${springCloudGcpVersion}"
	}

	dependencies {
		dependency "org.springdoc:springdoc-openapi-starter-webflux-ui:${springdocVersion}"
		dependency "org.mapstruct:mapstruct:$mapstructVersion"
        dependency "org.mapstruct:mapstruct-processor:$mapstructVersion"
		dependency "org.projectlombok:lombok-mapstruct-binding:$lombokMapstructBindingVersion"
	}
}

configurations {
	compileOnly {
		extendsFrom annotationProcessor
	}

	testCompileOnly {
        extendsFrom testAnnotationProcessor
    }
}

tasks.named('test') {
	useJUnitPlatform()
}

test {
    testLogging {
        events "passed", "skipped", "failed" //, "standardOut", "standardError"

        showExceptions true
        exceptionFormat "full"
        showCauses true
        showStackTraces true

        showStandardStreams = false
    }
}

if (hasProperty('buildScan')) {
	buildScan {
	    termsOfServiceUrl = 'https://gradle.com/terms-of-service'
	    termsOfServiceAgree = 'yes'
	}
}
